library(shiny)
library(sn)
install.packages("sn", dep=T)
library(sn)
?sn
vec = seq(-15,15,0.001)
plot(vec,fs(vec,0,1),type="l")
points(vec,fs(vec,1,1),type="l",col="red")
points(vec,fs(vec,2,1),type="l",col="blue")
points(vec,fs(vec,-1,1),type="l",col="red")
points(vec,fs(vec,-2,1),type="l",col="blue")
fs = function(x,epsilon,delta) dnorm(sinh(delta*asinh(x)-epsilon))*delta*cosh(delta*asinh(x)-epsilon)/sqrt(1+x^2)
vec = seq(-15,15,0.001)
plot(vec,fs(vec,0,1),type="l")
points(vec,fs(vec,1,1),type="l",col="red")
points(vec,fs(vec,2,1),type="l",col="blue")
points(vec,fs(vec,-1,1),type="l",col="red")
points(vec,fs(vec,-2,1),type="l",col="blue")
vec = seq(90,110,0.001)
plot(vec,fs(vec,0,1),type="l")
points(vec,fs(vec,1,1),type="l",col="red")
points(vec,fs(vec,2,1),type="l",col="blue")
points(vec,fs(vec,-1,1),type="l",col="red")
points(vec,fs(vec,-2,1),type="l",col="blue")
plot(vec,fs(vec,0,1),type="l")
points(vec,fs(vec,2,1),type="l",col="red")
points(vec,fs(vec,3,1),type="l",col="black")
points(vec,fs(vec,4,1),type="l",col="green")
points(vec,fs(vec,5,1),type="l",col="purple")
vec = seq(-15,15,0.001)
plot(vec,fs(vec,0,1),type="l")
points(vec,fs(vec,2,1),type="l",col="red")
points(vec,fs(vec,3,1),type="l",col="black")
points(vec,fs(vec,4,1),type="l",col="green")
points(vec,fs(vec,5,1),type="l",col="purple")
vec = seq(-5,30,0.001)
plot(vec,fs(vec,0,1),type="l")
points(vec,fs(vec,2,1),type="l",col="red")
points(vec,fs(vec,3,1),type="l",col="black")
points(vec,fs(vec,4,1),type="l",col="green")
points(vec,fs(vec,5,1),type="l",col="purple")
x <- fs(vec,0,1)
skew(x)
skewness(x)
??skew
fs = function(x, epsilon, delta) {
dnorm(sinh(delta*asinh(x)-epsilon)) * delta * cosh(delta*asinh(x)-epsilon) /sqrt(1+x^2)
}
x <- fs(vec,0,1)
x
library(e1071)
skewness(x)
plot(x)
vec = seq(-5,30,0.1)
x <- fs(vec,0,1)
skewness(x)
plot(x)
plot(vec,fs(vec,0,1),type="l")
?sliderInput
plot(vec,fs(vec,0,1),type="l")
runApp
runApp("ShinySkew")
getwd9)
getwd()
runApp()
describe
summary
summary(x)
library(psych)
?describe
describe(x)
str(describe(x)
)
describe(x)[,11:12]
skew(x)
skew(x, p.skew)
p.skew
sk <- skew(x)
str(sk)
library(pastecs)
?pastecs
stat.desc(x, basic = FALSE, norm = TRUE)
stat.desc(x, basic = FALSE, norm = TRUE)[,8:11]
stat.desc(x, basic = FALSE, norm = TRUE)[,8]
des <- stat.desc(x, basic = FALSE, norm = TRUE)[,8]
des <- stat.desc(x, basic = FALSE, norm = TRUE)
str(des)
des
des <- stat.desc(x, basic = FALSE, norm = TRUE)[8:11]
des
runApp()
fs = function(x, epsilon, delta) {
dnorm(sinh(delta*asinh(x)-epsilon)) * delta * cosh(delta*asinh(x)-epsilon) /sqrt(1+x^2)
}
vec = seq(-3, 25, 0.1)
eps <- 1
del <- 1
fs(vec, 1, 1)
fs(vec, eps, del)
kurt
runApp()
?reactiveValues
runApp()
dist
runApp()
y <- fs(vec, 0, 1)
vec = seq(-3, 25, 0.01)
y <- fs(vec, 0, 1)
?sample
runApp()
?dnorm
stat.desc(c)
stat.desc(x)
runApp()
